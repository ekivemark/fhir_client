"""
Django settings for fhir_client project.

Generated by 'django-admin startproject' using Django 1.9.5.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""
import os
import json
# import sys
from platform import python_version
from .utils import (str2bool,
                    str2int,
                    CurrentUserMiddleware,
                    Server_Ip,
                    Server_Name)

# SECURITY WARNING: keep the secret key used in production secret!
# The real value is set in the envs.settings_local.py
# settings_local.py is excluded from the git repository
# Place other important keys, passwords etc. in .envs.settings_local.py
# which is called at the start of settings.py

# You can generate a new SECRET_KEY using tools such as
# http://www.miniwebtool.com/django-secret-key-generator/
SECRET_KEY = 'FAKE_VALUE_REAL_VALUE_SET_FROM_.ENVS.SETTINGS_LOCAL'

# Set the SECRET_KEY in envs/settings_local.py

# Run machine/environment specific settings_local.py
# for an alternative that uses in files see:
# http://stackoverflow.com/questions/4909958/django-local-settings/14545196#14545196

# Use envs.settings_local.py as a model for your local machine or environment
# specific settings file then load it here.

BASE_DIR = os.path.dirname(os.path.dirname(__file__))

try:
    from .envs.settings_local import *
except ImportError:
    pass

# settings.py should check for the values set in a local file.
# if a setting is not found a default can be set.
# This allows the application to run without a settings_local file found.

###################
#
# SECURITY WARNING: don't run with debug turned on in production!
#
###################

# DEBUG: must be set to False for Production.
# If DEBUG is not set in settings_local set DEBUG to Fal
try:
    DEBUG
except NameError:
    print("DEBUG not set. Setting to False")
    DEBUG = False

if DEBUG:
    print("THIS APPLICATION IS RUNNING IN DEBUG MODE. SET FALSE FOR PRODUCTION USE!")
    print("We are back from local with ALLOWED_HOSTS:", ALLOWED_HOSTS )
    print("LOCAL_APPS:", LOCAL_APPS)
    print("SECRET_KEY:", SECRET_KEY)
else:
    DEBUG = False

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR is set to the Parent Directory.
try:
    BASE_DIR
except NameError:
    BASE_DIR = os.path.dirname(os.path.dirname(__file__))

APPLICATION_ROOT = BASE_DIR

try:
    SYSNAME
except NameError:
    # Short system name - use it to prefix file names for things such as logging.
    SYSNAME = "fhir_cli"

try:
    DOMAIN
except NameError:
    DOMAIN = Server_Name()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.7/howto/deployment/checklist/

# Application definition

BASE_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

THIRD_PARTY_APPS = [
    'bootstrap3',
    'bootstrapform',
    'oauth2_provider',
    'corsheaders',
]

CUSTOM_APPS = [
    '_start',
    'apps.getfhir',
]

INSTALLED_APPS = BASE_APPS + THIRD_PARTY_APPS + CUSTOM_APPS

# set LOCAL_APPS in .envs.settings_local
try:
    LOCAL_APPS
except NameError:
    INSTALLED_APPS = INSTALLED_APPS + LOCAL_APPS

AUTHENTICATION_BACKENDS = (
    # 'social.backends.open_id.OpenIdAuth',
    # 'social.backends.google.GoogleOpenId',
    # 'social.backends.google.GoogleOAuth2',
    # 'social.backends.google.GoogleOAuth',
    # 'social.backends.twitter.TwitterOAuth',
    # 'social.backends.yahoo.YahooOpenId',
    'django.contrib.auth.backends.ModelBackend',
)

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    #'social.apps.django_app.middleware.SocialAuthExceptionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = '_start.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'social.apps.django_app.context_processors.backends',
                # 'social.apps.django_app.context_processors.login_redirect',
                'django_settings_export.settings_export',
            ],
            # 'loaders': [
            #     'django.template.loaders.filesystem.Loader',
            #     'django.template.loaders.app_directories.Loader',
            # ],
            # Need to pass Debug from local settings.
            'debug': DEBUG,
        },
    },
]

WSGI_APPLICATION = '_start.apache2.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

# set DATABASES in envs.settings_local

try:

    DATABASES
except NameError:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db/db.sqlite3'),
        }
    }

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.7/howto/static-files/

# URL prefix for admin static files -- CSS, JavaScript and images.
# Make sure to use a trailing slash.
# Examples: "http://foo.com/static/admin/", "/static/admin/".
ADMIN_MEDIA_PREFIX = '/static/admin/'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(BASE_DIR, 'sitestatic'),
)

if DEBUG:
    print("STATICFILES_DIRS:", STATICFILES_DIRS)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    #    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

# Remember to set STATIC_ROOT in settings_local.py
# then run manage.py collectstatic
# To serve static files using Apache
# STATIC_ROOT = '/var/www/html/'+DOMAIN+'/'
try:
    STATIC_ROOT
except NameError:
    STATIC_ROOT = '/var/www/html/'+DOMAIN+'/'

# where will static files appear in the URL structure for this app
STATIC_URL = '/static/'

# OAUTH_TEST_INFO = {'APP_KEY':"ApplicationKey",
#                    'APP_SECRET': "ApplicationSecret",
#                    'URL': "https://api.twitter.com/oauth/request_token"
#                    }

####
#### PYTHON-SOCIAL-AUTH SETTINGS
####
# SOCIAL_AUTH_AUTHENTICATION_BACKENDS = (
#     'social.backends.open_id.OpenIdAuth',
#     'social.backends.google.GoogleOpenId',
#     'social.backends.google.GoogleOAuth2',
#     'social.backends.google.GoogleOAuth',
#     'social.backends.twitter.TwitterOAuth',
#     'social.backends.yahoo.YahooOpenId',
# )
#
# #SOCIAL_AUTH_USER_MODEL = 'User'
# SOCIAL_AUTH_URL_NAMESPACE = 'social'
# SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS = ['username', 'first_name', 'email']

# When testing with Django-OAuth-Toolkit (DOT) localhost can confuse the library
# Modify your /etc/hosts file to add a domain name for each local service
# then refer to the service in your app by name.
# this little trick can save you hours of frustration in testing!
#127.0.0.1       my-fake-test-redirect-on-localhost.com:8080
#127.0.0.1       bluefitbutton.ekivemark.com:8000


OAUTH_TEST_INFO = {'CLIENT_ID': 'EJi3gHNyWZpyynuK77A2RQ5uJndruIsze0eivUMw',
                   'CLIENT_SECRET': "mVp4oO4ph2lnlpTcxhfgu4pBP6kivQLOo8jHCgZjJmxZbxyrT2AKKHP7yWGlrDDeEyRQTkOPOvcaWYBnKrKetmoojYNBENUa4szCzhItAzTE4JTa0LyucsQwXvoM7YSk",
                   # 'CLIENT_ID': "HDHZqA7dEnAif9PRq1atwWXMtkZNXUtZodb93iH0",
                   # 'CLIENT_SECRET': "H4BIyuyGTBTVG9CvVFtcMhYYIS4xQScbsYtaREEcYHN1VsIf4MeWjxYC56dqc970ACDnf5A1Kge6rVz5yecaTJjlORv502XLIcKlO5JwX2bAsw5bSXFdsjtsXVbX7ScE",
                   'USER': "healthcamp_mark",
                   'CLIENT_TYPE': "confidential",
                   'GRANT_TYPE': "authorization_code",
                   'NAME': "First_Test",
                   'REDIRECT_URI': "http://my-fake-test-redirect-on-localhost.com:8080/o/endpoint/",
                   #'URL': "https://api.bbonfhir.com/o/token",
                   # 'AUTH_URL': "https://api.bbonfhir.com/o/authorize",
                   # 'TOKEN_URL': "https://api.bbonfhir.com/o/token",
                   'AUTH_URL': "http://bluefitbutton.ekivemark.com:8000/o/authorize/",
                   'TOKEN_URL': "http://bluefitbutton.ekivemark.com:8000/o/token/",
                   'REVOKE_URL': "http://bluefitbutton.ekivemark.com:8000/o/revoke_token/",
                   #'BASE': "https://api.bbonfhir.com",
                   'BASE': "http://bluefitbutton.ekivemark.com:8000",
                   }

OAUTH_VERSION = 2.0

# What is the correct setting for CORS
CORS_ORIGIN_ALLOW_ALL = True

SETTINGS_EXPORT = [
    'DEBUG',
    'APPLICATION_TITLE',
    'DOMAIN',
]

# login redirects to /accounts/profile unless overridden with LOGIN_REDIRECT_URL
LOGIN_REDIRECT_URL = '/'

